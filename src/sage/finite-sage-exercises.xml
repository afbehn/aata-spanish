<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="finite-sage-exercises">
    <title>Ejercicios en Sage</title>

    <exercise number="1">
        <statement>
            <p>Cree un cuerpo finito de orden <m>5^2</m> y factorice <m>p(x)=x^{25}-x</m> sobre este cuerpo.  Comente sobre qué es lo interesante de este resultado y por qué no es una sorpresa.</p>
        </statement>

        
    </exercise>

    <exercise number="2">
        <statement>
            <p>El Corolario<nbsp/><xref ref="corollary-cyclic-group-finite-field"/> dice que los elementos distintos de cero de un cuerpo finito forman un grupo cíclico con la multiplicación.  El generador usado en Sage es también un generador de este grupo multiplicativo.  Para ver esto, cree un cuerpo finito de orden <m>2^7</m>.  Cree dos listas de los elementos del cuerpo: primero, use el método <c>.list()</c>, luego use una lista por comprensión para generar las potencias del generador especificado en la creación del cuerpo.</p>

            <p>A la segunda lista le faltará el cero para ser el cuerpo completo. Cree el elemento 0 del cuerpo (quizás coercionando <m>0</m> para que pertenezca al cuerpo) y agréguelo a la lista de potencias usando <c>.append()</c>.  Use el comando <c>sorted()</c> con cada una de las listas y verifique la igualdad.</p>
        </statement>

        
    </exercise>

    <exercise number="3">
        <statement>
            <p>Los subcuerpos de un cuerpo finito están completamente clasificados por el Teorema<nbsp/><xref ref="theorem-finite-subfields"/>.  Es posible crear dos cuerpos finitos de los órdenes apropiados para que se cumpla la relación de extensión/subcuerpo, y traducir de uno a otro. Pero en este ejericicio construiremos un subcuerpo de un cuerpo finito desde cero.  Como el grupo de elementos distintos de cero en un cuerpo finito es cíclico, los elementos distintos de cero de un subcuerpo formarán un subgrupo del grupo cíclico, que necesariamente será cíclico.</p>

            <p>Cree un cuerpo finito de orden <m>3^6</m>.  La teoría dice que existe un subcuerpo de orden <m>3^2</m>, pues <m>2|6</m>.  Determine un generador de orden multiplicactivo <m>8</m> para los elementos distintos de cero de este subcuerpo, y construya estos <m>8</m> elementos.  Agregue el elemento cero del cuerpo a esta lista.  Debiera ser claro que este conjunto de <m>9</m> elementos es cerrado bajo multiplicación.  En ausencia de nuestros teoremas sobre cuerpos finitos y grupos cíclicos, la clausura bajo la suma no es obvia.  Escriba una línea que verifique si este conjunto es cerrado bajo sumas, considerando todas la posibles sumas de elementos del conjunto.</p>
        </statement>

        
    </exercise>

    <exercise number="4">
        <statement>
            <p>Este problema investiga la <q>separabilidad</q> de <m>{\mathbb Q}(\sqrt{3},\sqrt{7})</m>.  Usted puede crear este cuerpo de números rápidamente con el constructor <c>NumberFieldTower</c>, junto con los polinomios <m>x^2-3</m> y <m>x^2-7</m>.  Aplane la torre con el método <c>.absolute_field()</c> y use el método <c>.structure()</c> para recuperar los isomorfismos entre la torre y la versión plana del cuerpo.  Nombre a la torre como <c>N</c> y use  <c>a</c> y <c>b</c> como generadores.  Nombre la versión plana como <c>L</c> con <c>c</c> como generador.</p>

            <p>Cree un elemento no trivial (<q>aleatorio</q>) de <c>L</c> usando tantas potencias de <c>c</c> como sea posible (verifique el grado de <c>L</c> para ver cuántas potencias linealmente independientes existen).  Solicite a Sage el polinomio minimal de su elemento aleatorio, asegurando así que el elemento es una raíz.  Construya ese polinomio minimal como polinomio sobre <c>N</c>, la torre de cuerpos, y encuentre su factorización.  Esta factorización debiese tener solo factores lineales.  Cada raíz debiese ser una expresión en <c>a</c> y <c>b</c>.  Convierta cada raíz en una expresión con notación matemática que involucre <m>\sqrt{3}</m> y <m>\sqrt{7}</m>.  Use una de las funciones para verificar que una de las raíces corresponde al elemento aleatorio original.</p>

            <p>Cree unos pocos elementos aleatorios más, y encuentre una factorización (en <c>N</c> o en <c>L</c>).  Para que un cuerpo sea separable, todo elemento del cuerpo debe ser una raíz de <em>algún</em> polinomio separable.  El polinomio minimal es un buen polinomio para probar.  (¿Por qué?)  Basado en esta evidencia, ¿parece que <m>{\mathbb Q}(\sqrt{3},\sqrt{7})</m> fuera una extensión separable?</p>
        </statement>

        
    </exercise>

    <exercise number="5">
        <statement>
            <p>El Ejercicio<nbsp/><xref ref="exercise-frobenius-map"/> describe el automorfismo de Frobenius de un cuerpo finito.  Si <c>F</c> es un cuerpo finito en Sage, entonces <c>End(F)</c> creará el grupo de automorfismos de <c>F</c>.</p>

            <ol>
                <li><p>Trabaje el Ejercicio<nbsp/><xref ref="exercise-frobenius-map"/> para mejorar su comprensión de como y por qué la función de Frobenius es un automorfismo de cuerpos.  (Lo que viene será más sencillo si hace esto primero.)</p></li>

                <li><p>Para algunos cuerpos finitos pequeños, pero no triviales identifique el automorfismo de Frobenius dentro del grupo de automorfismos.  Pequeños podría significar <m>p=2,3,5,7</m> y <m>3\leq n\leq 10</m>, con <m>n</m> primo versus compuesto.</p></li>

                <li><p>Una vez que haya identificado la función de Frobenius, describa los demás automorfismos.  En otras palabras, con un poco de investigación, debiese ser posible dar una descripción de los automorfismos que le permita predecir correctamente el grupo completo de automorfismos de un cuerpo finito que no haya explorado aún.  (Ayuda: el grupo de automorfismos del grupo es un grupo.  ¿Qué pasa si <q>hace la operación</q> de la función de Frobenius consigo misma?  ¿Qué es exactamente esta operación?  Intente usar la notación multiplicativa de Sage con los elementos del grupode automorfismos.)</p></li>

                <li><p>¿Cuál es la <q>estructura</q> del grupo de automorfismos?  ¿Cuál es el rol especial de la función de Frobenius en este grupo?</p></li>

                <li><p>Para cualquier cuerpo, el subcuerpo conocido como cuerpo fijo es una construcción importantes, y será lo será más aún en el siguiente capítulo.  Dado un automorfismo <m>\tau</m> de un cuerpo <m>E</m>, se puede demostrar que el subconjunto, <m>K=\{b\in E\mid\tau(b)=b\}</m>, es un subcuerpo de <m>E</m>.  Se conoce como el <term>cuerpo fijo</term> de <m>\tau</m> en <m>E</m>.  Para cada automorfismo de <m>E=GF(3^6)</m> identifique su cuerpo fijo.  Como entendemos la estructura de subcuerpos de un cuerpo finito, es suficiente con determinar el orden de un cuerpo fijo para identificarlo completamente.</p></li>
            </ol>

        </statement>

        
    </exercise>

    <exercise number="6">
        <statement>
            <p>El Ejercicio<nbsp/><xref ref="exercise-finite-sum-of-squares"/> sugiere que todo elemento de un cuerpo finito puede ser escrito (expresado) como suma de cuadrados.  Acá se sugieren experimentos computacionales que pueden ayudarle a formular una demostración del ejercicio.</p>

            <ol>
                <li><p>Construya dos cuerpos pequeños pero no demasiado pequeños, uno con <m>p=2</m> y el otro con un primo impar.  Repita lo siguiente con cada cuerpo <m>F</m>.</p></li>

                <li><p>Escoja un elemento <q>aleatorio</q> del cuerpo, digamos <m>a\in F</m>.  Construya los conjuntos <md>
                    <mrow>&amp;\{x^2|x\in F\}&amp;&amp;\{a-x^2|x\in F\}</mrow>
                </md> usando conjuntos Sage con el constructor <m>Set()</m>.  (Cuidado: <c>set()</c> es un comando Python que se comporta de forma fundamentalmente diferente.)</p></li>

                <li><p>Examine el tamaño de los dos conjunto y el tamaño de su intersección (<c>.intersection()</c>).  Pruebe con diferentes elementos <m>a</m>, quizás usando un bucle para probar <em>todos</em> los valores posibles. Note que <m>p=2</m> se comportará de forma bastante diferente.</p></li>

                <li><p>Supongamos que tiene un elemento de la intersección.  (Puede obtener uno con el método <c>.an_element()</c>.)  ¿Cómo lleva esto a la suma de cuadrados propuesta en el ejercicio?</p></li>

                <li><p>¿Puede escribir una función en Python que reciba un cuerpo finito cuyo orden sea una potencia de un primo impar y luego liste cada elemento como suma de cuadrados?</p></li>
            </ol>

        </statement>

        
    </exercise>

</exercises>
