<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="homomorph-sage-exercises">
    <title>Ejercicios Sage</title>

    <exercise number="1">
        <statement>
            <p>Un automorfismo es un isomorfismo de un grupo en sí mismo.  La función identidad (<m>x\mapsto x</m>) siempre es un isomorfismo, que consideramos trivial.  Use Sage para construir un automorfismo no trivial del grupo cíclico de orden <m>12</m>.  Verfique que la función es biyectiva calculando su imagen y su núcleo y realizando pruebas en estos subgrupos.  Ahora construya todos los posibles automorfismos del grupos cíclico de orden  <m>12</m> sin repeticiones.</p>
        </statement>
        
    </exercise>

    <exercise number="2">
        <statement>
            <p>Los cuatro homomorfismos creados por la construcción del producto directo son cada uno un ejemplo de una construcción más general de homomorfismos que involucran los grupos  <m>G</m>, <m>H</m> y <m>G\times H</m>.  Usando los mismos grupos del ejemplo en la subsección anterior, vea si puede descubrir y describir estas construcciones  con definiciones exactas de los cuatro homomorfismos en general.</p>

            <p>Las herramientas para investigar homomorfismos de grupos en Sage son limitadas, se puede tomar cada generador del dominio y ver cuál es su imagen.  A continuación  un ejemplo de este tipo de cálculo que puede realizar repetidamente.  Investigaremos el segundo homomorfismo.  El dominio es el grupo dihedral, y calcularemos la imagen del primer generador.</p>

            <sage>
            <input>
            G = CyclicPermutationGroup(3)
            H = DihedralGroup(4)
            results = G.direct_product(H)
            phi = results[2]
            H.gens()
            </input>
            <output>
            [(1,2,3,4), (1,4)(2,3)]
            </output>
            </sage>

            <sage>
            <input>
            a = H.gen(0); a
            </input>
            <output>
            (1,2,3,4)
            </output>
            </sage>

            <sage>
            <input>
            phi(a)
            </input>
            <output>
            (4,5,6,7)
            </output>
            </sage>
        </statement>
        
    </exercise>

    <exercise number="3">
        <statement>
            <p>Considere dos grupos de permutaciones.  El primero es el subgrupo de <m>S_7</m> generado por <m>(1, 2, 3)</m> y <m>(4, 5, 6, 7)</m>.  El segundo es el subgrupo de  <m>S_{12}</m> generado por <m>(1, 2, 3)(4, 5, 6)(7, 8, 9)(10, 11, 12)</m> y <m>(1, 10, 7, 4)(2, 11, 8, 5)(3, 12, 9, 6)</m>.  Construya estos dos grupos y use el comando Sage apropiado para ver que son isomorfos.  Después construya un homomorfismo entre estos dos grupos que sea un isomorfismo e incluya suficientes detalles para verificar que la función es realmente un isomorfismo.</p>
        </statement>
        
    </exercise>

    <exercise number="4">
        <statement>

            <p>El segundo párrafo de este capítulo describe informalmente un homomorfismo de  <m>S_n</m> a <m>{\mathbb Z}_2</m>, donde las permutaciones pares se envían todas en uno de los elementos y las impares en el otro elemento.  Reemplace <m>S_n</m> por <m>S_6</m> y reemplace <m>{\mathbb Z}_2</m> por la versión permutacional del grupo cíclico de orden  <m>2</m>, y construya un homomorfismo no trivial entre estos dos grupos.  Evalúe su homomorfismo en suficientes permutaciones pares e impares para convencerse de que está correcto.  Después construya el núcleo y verifique que es el grupo que espera que sea.</p>

            <p>Hints:  Primero, decida que elementos del grupo de orden  <m>2</m> estará asociado con las permutaciones pares y cuál con las impares.  Examine los generadores de  <m>S_6</m> para ayudarle a decidir como definir el homomorfismo.</p>
        </statement>

        
    </exercise>

    <exercise number="5">
        <statement>

            <p>El grupo dihedral  <m>D_{20}</m> tiene varios subgrupos normales, como se ve más abajo.  Cada uno de estos es el núcleo de un homomorfismo cuyo dominio es  <m>D_{20}</m>.  Para cada subgrupo normal de  <m>D_{20}</m> construya un homomorfismo de <m>D_{20}</m> a <m>D_{20}</m> que tenga el subgrupo normal como su núcleo.   Incluya verificaciones en su trabajo de que está obteniendo los núcleos deseados. Hay un patrón en muchos de estos, pero los tres de orden  <m>20</m> serán un desafío.</p>

            <sage>
            <input>
            G = DihedralGroup(20)
            [H.order() for H in G.normal_subgroups()]
            </input>
            <output>
            [1, 2, 4, 5, 10, 20, 20, 20, 40]
            </output>
            </sage>

        </statement>

        

    </exercise>

    <todo>Add Sage exercises illustrating isomorphism theorems, since now have intersection of groups</todo>

</exercises>
