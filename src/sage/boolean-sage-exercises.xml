<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="boolean-sage-exercises">
    <title>Ejercicios en Sage</title>

    <exercise number="1">
        <statement>
            <p>Use  <c>R = Posets.RandomPoset(30,0.05)</c> para construir on conjunto parcialmente ordenado (poset) aleatorio.  Use <c>R.plot()</c> para tener una idea de lo que ubtuvo.</p>

            <ol>
                <li><p>Ilustre el uso de los siguientes métodos de poset:
                <c>.is_lequal()</c>,
                <c>.is_less_than()</c>,
                <c>.is_gequal()</c>, and
                <c>.is_greater_than()</c>
                para determinar si dos elementos específicos (de su elección) están relacionados o son incomparables.</p></li>

                <li><p>Use <c>.minimal_elements()</c> y <c>.maximal_elements()</c> para encontrar tanto el menor como el mayor elemento de su conjunto parcialmente ordenado.</p></li>

                <li><p>Use <c>LatticePoset(R)</c> para ver si el conjunto parcialmente ordenado <c>R</c> es un reticulado intentando convertirlo en un reticulado.</p></li>

                <li><p>Encuentre una extensión lineal de su conjunto parcialmente ordenado.  Confirme que cualquier par de elementos comparables en el conjunto parcialmente ordenado original siguen siendo comparables de la misma forma en la extensión lineal.</p></li>
            </ol>
        </statement>

        

    </exercise>

    <exercise number="2">
        <statement>
            <p>Construya el conjunto parcialmente ordenado de los divisores enteros de <m>72=2^3\cdot 3^2</m> con la relación de divisibilidad, y conviértalo en un reticulado.</p>

            <ol>

                <li><p>Determine el elemento cero y el elemento uno usando <c>.top()</c> y <c>.bottom()</c>.</p></li>

                <li><p>Determine todos los pares de elementos del reticulado que son complementarios <em>sin</em> usar el método <c>.complement()</c>, sino solamente los métodos <c>.meet()</c> y <c>.join()</c>.  Mejor si cada par aparece solo una vez.</p></li>

                <li><p>Determine si el reticulado es distributivo usando solo los métodos <c>.meet()</c> and <c>.join()</c>, y no el método <c>.is_distributive()</c>.</p></li>
            </ol>
        </statement>

        
    </exercise>

    <exercise number="3">
        <statement>
            <p>Construya varios reticulados diamante con <c>Posets.DiamondPoset(n)</c> haciendo variar el valor de <c>n</c>.  Una vez que le parezca tener suficiente evidencia empírica, responda, con justificaciones, las siguientes preguntas para valores <em>arbitrarios</em> de <m>n</m>, basado en observaciones obtenidas de sus experimentos con Sage.</p>

            <ol>
                <li><p>¿Cuáles son los elementos que tienen complemento y cuáles no lo tienen? ¿Por qué?</p></li>

                <li><p>Lea la documentación del método <c>.antichains()</c> para aaprender lo que es una anticadena.  ¿Cuántas anticadenas hay?</p></li>

                <li><p>¿Es distributivo el reticulado?</p></li>
            </ol>
        </statement>

        
    </exercise>

    <exercise number="4">
        <statement>
            <p>Use <c>Posets.BooleanLattice(4)</c> para construir una instancia del álgebra Booleana prototípica en <m>16</m> elementos (<ie/>, todos los subconjuntos de un conjunto de <m>4</m> elementos).</p>

            <p>Luego use <c>Posets.IntegerCompositions(5)</c> para construir el conjunto parcialmente ordenado cuyos <m>16</m> elementos son las composiciones del entero <m>5</m>.  Vimos arriba que el reticulado de composición de entero es distributivo y complementado, por lo que forma un álgbera Booleana.  Por el Teorema<nbsp/><xref ref="theorem-classification-boolean-algebra"/> podemos concluir que esta dos álgebras Booleanas son isomorfas.</p>

            <p>Use el método <c>.plot()</c> para visualizar la similaridad.  Luego use el método <c>.hasse_diagram()</c> en cada reticulado para obtener un grafo dirigido (que también puede dibujar, aunque la incrustación en el plano puede que no sea tan informativa).  Emplee el método <c>.is_isomorphic()</c> del grafo para verificar que estos dos diagramas de Hasse son realmente <q>iguales.</q></p>
        </statement>

        
    </exercise>


    <exercise number="5">
        <statement>
            <p>(Avanzado) Para la pregunta anterior, construya on isomorfismo <em>explícito</em> entre las dos álgebras Booleanas.  Esto es una biyección (construída con el comando <c>def</c>) que convierta composiciones en conjuntos (oo si lo prefiere, conjuntos en composiciones) y que respete las operaciones de ínfimo y supremo (meet y join).  Puede poner a prueba e ilustrar su función por su interacción con elementos específicos evaluados en las operaciones de ínfimo y supremo, como está descrito en la definición de isomorfismo de álgebras Boleanas.</p>
        </statement>

        

    </exercise>

</exercises>
